pipeline {
    def COLOR_MAP = ['SUCCESS': 'good', 'FAILURE': 'danger', 'ABORTED': 'warning']
    agent any
    options { timestamps () }
    stages {
        stage('Clone Repo') {
            steps {
                script {
                    checkout([$class: 'GitSCM',
                        branches: [[name: "hp/jenkins-build"]],
                        userRemoteConfigs: [[url: 'git@github.com:doo/scanbot-sdk-example-web.git']]
                    ])
                }
            }
        }
        stage('Build Docker Images') {
            steps {
                script {
                    sh '''
                        set -ex
                        docker build -t web-sdk-react:latest -f jenkins-build/Dockerfiles/react.Dockerfile .
                        docker build -t web-sdk-plain:latest -f jenkins-build/Dockerfiles/plain.Dockerfile .
                        docker build -t web-sdk-angular:latest -f jenkins-build/Dockerfiles/angular.Dockerfile .
                        '''
                }
            }
        }
        stage('Build React App') {
            steps {
                script {
                    sh '''
                        set -ex
                        docker run -v "$(pwd)":/sources --rm --name scanbot-web-react-build web-sdk-react:latest /bin/bash jenkins-build/scripts/build_react.sh
                        '''
                }
            }
        }
        stage('Build Plain App') {
            steps {
                script {
                    sh '''
                        set -ex
                        docker run -v "$(pwd)":/sources --rm --name scanbot-web-plain-build web-sdk-plain:latest /bin/bash jenkins-build/scripts/build_plain.sh
                        '''
                }
            }
        }
        stage('Build Angular App') {
            steps {
                script {
                    sh '''
                        set -ex
                        docker run -v "$(pwd)":/sources --rm --name scanbot-web-angular-build web-sdk-angular:latest /bin/bash jenkins-build/scripts/build_angular.sh
                        '''
                }
            }
        }
    }
    post {
        always {
            slackSend channel: '#jenkinsbuilds',
            color: COLOR_MAP[currentBuild.currentResult],
            message: "${env.JOB_NAME} - #${env.BUILD_NUMBER} Success after ${currentBuild.durationString.replace(' and counting', '')} (<${env.BUILD_URL}>|Open)"  
        }
    }
}